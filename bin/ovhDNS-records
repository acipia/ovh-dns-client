#!/usr/bin/env node

var program = require('commander');
var appPackage = require('../package');
var _ = require('lodash');
var validator = require('validator');
var helper = require('../helper');
var Table = require('cli-table');

program

    .description('Use "https://goo.gl/BCSXMH" to get the ApplicationKey, ApplicationSecret and ConsumerKey')
    //.description('Use "https://api.ovh.com/createToken/?GET=/domain/zone/*&POST=/domain/zone/*&PUT=/domain/zone/*&DELETE=/domain/zone/*" to get the ApplicationKey, ApplicationSecret and ConsumerKey')
    .option('-E, --endpoint [endpoint]', 'API Endpoint (Possible Endpoints : "ovh-eu","ovh-ca" Default is "ovh-eu"', 'ovh-eu')
    .option('-K, --applicationKey [key]', 'The Application Key provided by OVH')
    .option('-S, --applicationSecret [secret]', 'The Application Secret Key provided by OVH')
    .option('-C, --consumerKey [consumerKey]', 'The Consumer-Key provided by OVH')
    .option('-t, --table', 'Show the Result as Table (default)')
    .option('-j, --json', 'Show the Result as JSON')
    .parse(process.argv);

var config = helper.inputValidateAndSetConfig(program);

var api = require('../api')(config);

if (program.args.length < 1) {
    console.log("Not enough arguments, 'zone' is required")
} else {
    if (program.args.length == 2) {
        fieldType = program.args[1].toUpperCase() ;
    } else {
        fieldType = null ;
    }

    api.listRecords(program.args[0], fieldType, function (err, records) {
        if (!err) {
            if (!program.json) {
                var table = new Table({
                    head: ['ID', 'Zone', 'SubDomain', 'FieldType', 'Target']
                });
                _.each(records, function (record) {
                    table.push([record.id, record.zone, record.subDomain, record.fieldType, record.target]);
                });

                console.log(table.toString());
            } else {
                console.log(records);
            }
        } else {
            console.error(err, records);
        }
    });
}